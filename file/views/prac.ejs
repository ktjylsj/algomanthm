<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script src="https://d3js.org/d3.v3.min.js"></script>
  </head>
  <body>
    <h1><%= title %></h1>
    <p>This is a paragraph</p>
    <p>Welcome to <%= title %></p>
    <script>
        
        /*// 20강
        var canvas = d3.select("body").append("svg")
                       .attr("width", 760)
                       .attr("height", 700);
        
        d3.json("/data/geoinfo.geojson", function(data){
            var group = canvas.selectAll("g")
                              .data(data.features)
                              .enter() 
                              .append("g")
            
            var projection = d3.geo.mercator().scale(7300).translate([0, 1980]);
            var path = d3.geo.path().projection(projection);
            
            var areas = group.append("path")
                             .attr("d", path)
                             .attr("class", "area")
                             .attr("fill", "steelblue");
            
            group.append("text")
                 .attr("x", function(d){
                     return path.centroid(d)[0];
                 })
                 .attr("y", function(d){
                     return path.centroid(d)[1];
                 })
                 .attr("text-anchor", "middle")
                 .text(function(d){
                     return d.properties.LNNAMN;
                 })
        })*/
        /*
        // 19강
        var color = d3.scale.category10();
        
        var canvas = d3.select("body").append("svg")
                       .attr("width", 500)
                       .attr("height", 500);

        d3.json("/data/mydata3.json", function(data){
            var treemap = d3.layout.treemap()
                            .size([500, 500])
                            .nodes(data)
            console.log(treemap)
            var cells = canvas.selectAll(".cell")
                              .data(treemap)
                              .enter()
                              .append("g")
                              .attr("class", "cell")
            
            cells.append("rect")
                 .attr("x", function(d){
                     return d.x;
                 })
                 .attr("y", function(d){
                     return d.y;
                 })
                 .attr("width", function(d){
                     return d.dx;
                 })
                 .attr("height", function(d){
                     return d.dy;
                 })
                 .attr("fill", function(d){
                     return d.children ? null : color(d.parent.name);
                 })
                 .attr("stroke", "#fff")
            
            cells.append("text")
                 .attr("x", function(d){
                     return d.x + d.dx / 2;
                 })
                 .attr("y", function(d){
                     return d.y + d.dy / 2;
                 })
                 .attr("text-anchor", "middle")
                 .text(function(d){
                     return d.children ? null : d.name;
                 })
        })
        */
        
        // 17, 18강
        var width = 500
        var height = 500
        var padding = 50
        
        d3.csv("/data/ages.csv", function(data){
            //console.log(data)
            var map = data.map(function(i){
                return parseInt(i.age);
            })
            //console.log(data)
            
            var histogram = d3.layout.histogram()
                              .bins(5)
                              (map)
            
            var y = d3.scale.linear()
                      .domain([0, d3.max(histogram.map(function(i){
                          return i.length;
                      }))])
                      .range([0, height])
            
            var x = d3.scale.linear()
                      .domain([0, d3.max(map)])
                      .range([0, width])
            
            var xAxis = d3.svg.axis()
                          .scale(x)
                          .orient("bottom")
            
            //console.log(histogram)
            var canvas = d3.select("body").append("svg")
                           .attr("width", width)
                           .attr("height", height + padding)
                           .append("g")
                                .attr("transform", "translate(20, 0)");
            
            var group = canvas.append("g")
                              .attr("transform", "translate(0,"+height+")")
                              .call(xAxis)
            
            var bars = canvas.selectAll(".bar")
                             .data(histogram)
                             .enter()
                             .append("g")
            
            bars.append("rect")
                .attr("x", function(d){
                    return x(d.x);
                })
                .attr("y", function(d){
                    return 500 - y(d.y);
                })
                .attr("width", function(d){
                    return x(d.dx);
                })
                .attr("height", function(d){
                    return y(d.y);
                })
                .attr("fill", "steelblue")
            
            bars.append("text")
                .attr("x", function(d){
                    return x(d.x);
                })
                .attr("y", function(d){
                    return 500 - y(d.y);
                })
                .attr("dy", "20px")
                .attr("dx", function(d){
                    return x(d.dx)/2;
                })
                .attr("fill", "#fff")
                .attr("text-anchor", "middle")
                .text(function(d){
                    return d.y;
                })
        })
        
        /*
        // 16강
        var width = 800
        var height = 600
        var canvas = d3.select("body").append("svg")
                       .attr("width", 1500)
                       .attr("height", 1500)
                       .append("g")
                            .attr("transform", "translate(50, 50)");
        
        var pack = d3.layout.pack()
                     .size([width, height - 50])
                     .padding(10);
        
        d3.json("/data/mydata3.json", function(data){
            var nodes = pack.nodes(data)
            //console.log(nodes)
            var node = canvas.selectAll(".node")
                             .data(nodes)
                             .enter()
                             .append("g")
                                .attr("class", "node")
                                .attr("transform", function(d){
                                    return "translate("+d.x+","+d.y+")";
                                })
            node.append("circle")
                .attr("r", function(d){
                return d.r;
            })
                .attr("fill", function(d){
                return d.children ? "#fff" : "steelblue";
            })
                .attr("opacity", 0.25)
                .attr("stroke", function(d){
                return d.children ? "#fff" : "#ADADAD"
            })
                .attr("stroke-width", "2")
            
            node.append("text")
                .text(function(d){
                return d.children ? "" : d.name;
            })
        })*/
        
        /*
        // 15강 tree layout_2
        var tree = d3.layout.tree()
                 //d3.layout.cluster()
                     .size([400, 400]);
        
        d3.json("/data/mydata2.json", function(data){
            var nodes = tree.nodes(data);
            //console.log(nodes);
            var links = tree.links(nodes);
            //console.log(links);
            var node = canvas.selectAll(".node")
                             .data(nodes)
                             .enter()
                             .append("g")
                                 .attr("class", "node")
                                 .attr("transform", function(d){
                                    return "translate("+d.y+","+d.x+")";
                                 })
            node.append("circle")
                .attr("r", 5)
                .attr("fill", "steelblue")
            
            node.append("text")
                .text(function(d){
                return d.name;
            })
            
            var diagonal = d3.svg.diagonal()
                             .projection(function(d){
                                 return [d.y, d.x];
                             })
            
            canvas.selectAll(".link")
                  .data(links)
                  .enter()
                  .append("path")
                  .attr("class", "link")
                  .attr("fill", "none")
                  .attr("stroke", "#ADADAD")
                  .attr("d", diagonal);
        })*/
        
        /*// 14강 tree layout_1
        var diagonal = d3.svg.diagonal()
                         .source({x: 10, y: 10})
                         .target({x: 300, y: 300});
        
        canvas.append("path")
              .attr("fill", "none")
              .attr("stroke", "black")
              .attr("d", diagonal);*/
        
        /*// 13강 the pie layout
        var data = [10, 50, 80]
        var r = 300
        
        var color = d3.scale.ordinal()
                      .range(["red", "blue", "orange"])
        
        var canvas = d3.select("body").append("svg")
                       .attr("width", 1500)
                       .attr("height", 1500)
        
        var group = canvas.append("g")
                          .attr("transform", "translate(300, 300)")
        
        var arc = d3.svg.arc()
                    .innerRadius(0)
                    .outerRadius(r)
        
        var pie = d3.layout.pie()
                    .value(function(d){
                        return d;
                    })
        
        var arcs = group.selectAll(".arc")
                        .data(pie(data))
                        .enter()
                        .append("g")
                        .attr("class", "arc")
        
        arcs.append("path")
            .attr("d", arc)
            .attr("fill", function(d){
                return color(d.data);
            });
        
        arcs.append("text")
            .attr("transform", function(d){
                return "translate("+arc.centroid(d)+")";
            })
            .attr("text-anchor", "middle")
            .attr("font-size", "1.5em")
            .text(function(d){
                return d.data;
            })
            .attr("fill", "white")*/
        /*// 12강 arc
        var group = canvas.append("g")
                          .attr("transform", "translate(100, 100)")
        var r = 100;
        var p = Math.PI * 2;
        
        var arc = d3.svg.arc()
                    .innerRadius(r - 20)
                    .outerRadius(r)
                    .startAngle(0)
                    .endAngle(p - 1);
        
        group.append("path")
             .attr("d", arc);*/
        
        /*// 11강 Path
        var canvas = d3.select("body").append("svg")
                       .attr("width", 500)
                       .attr("height", 500)
        
        var data = [
            {x: 10, y: 20},
            {x: 40, y: 60},
            {x: 50, y: 70}
        ]
        
        var group = canvas.append("g")
                          .attr("transform", "translate(100, 100)")
        
        var line = d3.svg.line()
                     .x(function(d){
                         return d.x
                     })
                     .y(function(d){
                         return d.y
                     })
        
        group.selectAll("path")
             .data([data])
             .enter()
             .append("path")
             .attr("d", line)
             .attr("fill", "none")
             .attr("stroke", "#000")
             .attr("stroke-width", 10);*/
        
        /*// 10강
        d3.json("/data/mydata.json", function(data){
            console.log(data)
            var canvas = d3.select("body").append("svg")
                           .attr("width", 500)
                           .attr("height", 500)
            
            canvas.selectAll("rect")
                  .data(data)
                  .enter()
                       .append("rect")
                       .attr("width", function(d){
                           return d.age * 10;
                       })
                       .attr("height", 45)
                       .attr("y", function(d, i){
                           return i * 50;
                       })
                       .attr("fill", "blue")
            
            canvas.selectAll("text")
                  .data(data)
                  .enter()
                      .append("text")
                      .attr("fill", "white")
                      .attr("y", function(d, i){
                          return i * 50 + 15;
                      })
                      .text(function(d){
                          return d.name;
                      })
        })*/
        
        /*// 9강 console 창에서 실행
        var data = [10, 20, 30, 40, 50];
        // data.shift();
        // 10
        // data.sort(d3.descending);
        // [50, 40, 30, 20]
        // d3.min(data);
        // 10
        // d3.max(data);
        // 50
        // d3.extent(data)
        // [10, 50]
        // d3.sum(data)
        // 150
        // d3.mean(data)
        // 30
        // d3.median(data)
        // 30
        // d3.shuffle(data)
        // random order*/
        /*// 7강
        
        var data = [10];
        
        var canvas = d3.select("body")
                       .append("svg")
                       .attr("width", 500)
                       .attr("height", 500)
        
        var circle1 = canvas.append("circle")
                           .attr("cx", 50)
                           .attr("cy", 100)
                           .attr("r", 25)
        // 8강
        circle1.transition()
               .duration(1500)
               // delay
               //.delay(2000)
               .attr("cx", 150)
               .attr("cy", 150)
               // transition을 넣으면 순차적으로 이동
               .transition()
               .attr("cx", 50)
               .each("start", function(){
                   d3.select(this).attr("fill", "green")
               })
               .transition()
               .attr("cy", 50)
               .each("end", function(){
                   d3.select(this).attr("fill", "red");
               })
        
        var circle2 = canvas.append("circle")
                           .attr("cx", 50)
                           .attr("cy", 200)
                           .attr("r", 25)
        
        var circles = canvas.selectAll("circle")
                           .data(data)
                           .attr("fill", "yellow")
                           .exit()
                                .attr("fill", "blue")*/
                           /*.enter()
                                .append("circle")
                                .attr("cx", 50)
                                .attr("cy", 50)
                                .attr("fill", "green")
                                .attr("r", 25);*/
        
        
        
        /*// 4강
        var dataArray = [ 20, 40, 50, 60 ];
        // 5강
        var width = 500;
        var height = 500;
        
        var widthScale = d3.scale.linear()
                           .domain([0, 60])
                           .range([0, width]);
        
        var color = d3.scale.linear()
                      .domain([0, 60])
                      .range(["red", "blue"]);
        
        // 6강
        var axis = d3.svg.axis()
                     .ticks(5)
                     .scale(widthScale);
        
        
        var canvas = d3.select("body")
                       .append("svg")
                       .attr("width", width)
                       .attr("height", height)
                       .append("g")
                       .attr("transform", "translate(50, 50)");
        
        // 4강
        var bars = canvas.selectAll("rect")
                         .data(dataArray)
                         .enter()
                            .append("rect")
                            .attr("fill", function(d){
                                return color(d);
                            })
                            .attr("width", function(d){
                                return widthScale(d);
                            })
                            .attr("height", 50)
                            // d = data
                            // i = index
                            .attr("y", function(d, i){
                                return i * 100;
                            });
        
        // 6강
        canvas.append("g")
              .attr("transform", "translate(0, 400)")
              .call(axis)
        */
          // 글씨 p에 추가
          //.append("p")
          // 색깔 변환
          //.style("color", "red")
          //.text("Hi, what's up")
        // d3 attribute 출력
        // console.log(d3)
        // 3강
        /*var circle = canvas.append("circle")
                           .attr("cx", 250)
                           .attr("cy", 250)
                           .attr("r", 50)
                           // color
                           .attr("fill", "green");
        
        var rect = canvas.append("rect")
                         .attr("width", 100)
                         .attr("height", 50);

        var line = canvas.append("line")
                         .attr("x1", 0)
                         .attr("y1", 100)
                         .attr("x2", 400)
                         .attr("y2", 400)
                         .attr("stroke", "blue")
                         .attr("stroke-width", 10)*/
    </script>
    </body>
</html>